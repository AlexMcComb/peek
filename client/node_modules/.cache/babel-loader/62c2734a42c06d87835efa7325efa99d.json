{"ast":null,"code":"import _objectWithoutProperties from \"/Users/alex/Documents/projects/peek/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/alex/Documents/projects/peek/client/src/components/private-route/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Landing from \"../layout/Landing\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      auth = _ref.auth,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return auth.isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      })) : ReactDOM.render(React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Landing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }))), document.getElementById(\"app\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/alex/Documents/projects/peek/client/src/components/private-route/PrivateRoute.js"],"names":["React","Route","BrowserRouter","connect","PropTypes","Landing","PrivateRoute","Component","component","auth","rest","props","isAuthenticated","ReactDOM","render","document","getElementById","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,MAAkCC,IAAlC;;AAAA,SACnB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,IAAI,CAACG,eAAL,KAAyB,IAAzB,GACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGEE,QAAQ,CAACC,MAAT,CACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAET,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAMEU,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CANF,CAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;;AAmBAV,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,IAAI,EAAEL,SAAS,CAACc,MAAV,CAAiBC;AADA,CAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AADoB,GAAL;AAAA,CAA7B;;AAGA,eAAeN,OAAO,CAACiB,eAAD,CAAP,CAAyBd,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Landing from \"../layout/Landing\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        ReactDOM.render(\n          <BrowserRouter>\n            <div>\n              <Route exact path=\"/\" component={Landing} />\n            </div>\n          </BrowserRouter>,\n          document.getElementById(\"app\")\n        )\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}